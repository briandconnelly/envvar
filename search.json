[{"path":"https://briandconnelly.github.io/envvar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 envvar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://briandconnelly.github.io/envvar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Connelly. Author, maintainer, copyright holder.","code":""},{"path":"https://briandconnelly.github.io/envvar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Connelly B (2023). envvar: Make working environment variables easier consistent. https://github.com/briandconnelly/envvar, https://briandconnelly.github.io/envvar/.","code":"@Manual{,   title = {envvar: Make working with environment variables easier and more consistent},   author = {Brian Connelly},   year = {2023},   note = {https://github.com/briandconnelly/envvar, https://briandconnelly.github.io/envvar/}, }"},{"path":"https://briandconnelly.github.io/envvar/index.html","id":"envvar","dir":"","previous_headings":"","what":"Make working with environment variables easier and more consistent","title":"Make working with environment variables easier and more consistent","text":"Environment variables powerful tool enable code react environment. However, two common design choices frequent source friction. First, unlike “getter”-type functions, functions retrieve values environment variable typically fail silently. , additional code check whether environment variable set needed. Second, values almost always returned strings. understandable, programmers often use environment variables store wide variety data types numbers timestamps URLs. case, additional code required coerce strings intended format. frequent users environment variables, writing extra code unpleasant time consuming. envvar takes slightly opinionated perspective make working environment variables easier consistent. Unless default value explicitly given, envvar_get() raises error. example, let’s say code depends environment variable called NUM_CPUS. base R, first get value using Sys.getenv() see whether result empty string (NA like might expect): envvar’s envvar_get() just fail NUM_CPUS isn’t set: reasonable default known, can supplied via default argument. envvar prints message, though, know ’s using default rather value specified environment.","code":"num_cpus <- Sys.getenv(\"NUM_CPUS\")  if (identical(num_cpus, \"\")) {   stop(\"I need `NUM_CPUS` to be set!\") } #> Error in eval(expr, envir, enclos): I need `NUM_CPUS` to be set! library(envvar)  envvar_get(\"NUM_CPUS\") #> Error in `envvar_get()`: #> ! Environment variable `NUM_CPUS` is not set. envvar_get(\"NUM_CPUS\", default = 12) #> ℹ Environment variable `NUM_CPUS` is not set. Using default value 12. #> [1] 12"},{"path":"https://briandconnelly.github.io/envvar/index.html","id":"speaking-native-types","dir":"","previous_headings":"","what":"Speaking Native Types","title":"Make working with environment variables easier and more consistent","text":"Let’s say NUM_CPUS environment variable set 8. Sys.getenv() returns strings, can’t immediately treat like integer . envvar includes several helper functions return commonly-used data types proper type. , ’ll use envvar_get_integer() get NUM_CPUS return integer. envvar can handle numbers, logical values, version numbers, URLs, timestamps, UUIDs, IP addresses, . ’ll work dates next example.","code":"Sys.getenv(\"NUM_CPUS\") / 2 #> Error in Sys.getenv(\"NUM_CPUS\")/2: non-numeric argument to binary operator envvar::envvar_get_integer(\"NUM_CPUS\") / 2 #> [1] 4"},{"path":"https://briandconnelly.github.io/envvar/index.html","id":"validation","dir":"","previous_headings":"","what":"Validation","title":"Make working with environment variables easier and more consistent","text":"envvar’s envvar_get functions can also apply validation logic. example, let’s set environment variable called LAUNCH_DATE absolutely, positively must future. Let’s first set date past. read LAUNCH_DATE ensure future, can supply validate function envvar_get_date() checks value. function returns FALSE, error raised. Let’s try : Note validate argument supports one function. ’re need complex validation, just use function encapsulates fanciness.","code":"envvar_set(\"LAUNCH_DATE\" = \"1969-07-16\") envvar_get_date(\"LAUNCH_DATE\", validate = \\(x) x > Sys.Date()) #> Error in `envvar_get()`: #> ! \"1969-07-16\" is not a valid value for `LAUNCH_DATE` envvar_set(\"LAUNCH_DATE\" = \"2028-08-28\")  envvar_get_date(\"LAUNCH_DATE\", validate = \\(x) x > Sys.Date()) #> [1] \"2028-08-28\""},{"path":"https://briandconnelly.github.io/envvar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make working with environment variables easier and more consistent","text":"envvar still changing quickly, ’s quite ready CRAN. ’d like try development version, can install directly GitHub:","code":"# install.packages(\"remotes\") remotes::install_github(\"briandconnelly/envvar\")"},{"path":"https://briandconnelly.github.io/envvar/index.html","id":"related-packages","dir":"","previous_headings":"","what":"Related Packages","title":"Make working with environment variables easier and more consistent","text":"dotenv package loading environment variables .env files config package defining using multiple environments options package defining using R package options, another way adding flexibility code","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"envvar: Make working with environment variables easier and more consistent — envvar-package","title":"envvar: Make working with environment variables easier and more consistent — envvar-package","text":"envvar makes easy set, check, retrieve, transform, validate environment variables.","code":""},{"path":[]},{"path":"https://briandconnelly.github.io/envvar/reference/envvar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"envvar: Make working with environment variables easier and more consistent — envvar-package","text":"Maintainer: Brian Connelly bdc@bconnelly.net (ORCID) [copyright holder]","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of an environment variable — envvar_get","title":"Get the value of an environment variable — envvar_get","text":"envvar_get() returns value environment variable. envvar_get_oneof() gets value environment variable ensures within defined set potential values.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of an environment variable — envvar_get","text":"","code":"envvar_get(x, default = NULL, transform = NULL, validate = NULL)  envvar_get_oneof(x, choices, default = NULL, transform = NULL, validate = NULL)"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of an environment variable — envvar_get","text":"x String containing environment variable name default Optional default value environment variable set transform Optional function applies transformation variable's value validate Optional function checks value validity choices list containing potential values","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the value of an environment variable — envvar_get","text":"value given environment variable, set. string unless transform function changed object's type.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the value of an environment variable — envvar_get","text":"envvar_get() type-specific variants follow workflow: value environment variable retrieved. variable set default non-NULL, default value used. Otherwise error raised. Optionally, value can transformed function specified transform argument. Transformation functions return scalar object. Optionally, value can validated function specified validate argument. Validation functions return logical value indicating whether value matches given criteria. error raised validation function return TRUE. transformed, validated value returned.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of an environment variable — envvar_get","text":"","code":"# Get the current user's home directory envvar_get(\"HOME\") #> [1] \"/home/runner\"  # Get the current user, making sure it is either 'root' or 'alice' if (FALSE) { envvar_get_oneof(\"USER\", choices = c(\"root\", \"alice\")) }"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an environment variable is set — envvar_is_set","title":"Check whether an environment variable is set — envvar_is_set","text":"envvar_is_set() checks whether given environment variable set.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an environment variable is set — envvar_is_set","text":"","code":"envvar_is_set(x)"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an environment variable is set — envvar_is_set","text":"x String name environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an environment variable is set — envvar_is_set","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an environment variable is set — envvar_is_set","text":"","code":"envvar_is_set(\"HOME\") #> [1] TRUE"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a list of environment variables — envvar_list","title":"Get a list of environment variables — envvar_list","text":"envvar_list() returns named list defined environment variables","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a list of environment variables — envvar_list","text":"","code":"envvar_list()"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a list of environment variables — envvar_list","text":"named list","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a list of environment variables — envvar_list","text":"","code":"envvar_list() #> $ACCEPT_EULA #> [1] \"Y\" #>  #> $AGENT_TOOLSDIRECTORY #> [1] \"/opt/hostedtoolcache\" #>  #> $ANDROID_HOME #> [1] \"/usr/local/lib/android/sdk\" #>  #> $ANDROID_NDK #> [1] \"/usr/local/lib/android/sdk/ndk/25.2.9519653\" #>  #> $ANDROID_NDK_HOME #> [1] \"/usr/local/lib/android/sdk/ndk/25.2.9519653\" #>  #> $ANDROID_NDK_LATEST_HOME #> [1] \"/usr/local/lib/android/sdk/ndk/26.0.10792818\" #>  #> $ANDROID_NDK_ROOT #> [1] \"/usr/local/lib/android/sdk/ndk/25.2.9519653\" #>  #> $ANDROID_SDK_ROOT #> [1] \"/usr/local/lib/android/sdk\" #>  #> $ANT_HOME #> [1] \"/usr/share/ant\" #>  #> $AZURE_EXTENSION_DIR #> [1] \"/opt/az/azcliextensions\" #>  #> $BOOTSTRAP_HASKELL_NONINTERACTIVE #> [1] \"1\" #>  #> $CHROMEWEBDRIVER #> [1] \"/usr/local/share/chromedriver-linux64\" #>  #> $CHROME_BIN #> [1] \"/usr/bin/google-chrome\" #>  #> $CI #> [1] \"true\" #>  #> $CONDA #> [1] \"/usr/share/miniconda\" #>  #> $DEBIAN_FRONTEND #> [1] \"noninteractive\" #>  #> $DEPLOYMENT_BASEPATH #> [1] \"/opt/runner\" #>  #> $DOTNET_MULTILEVEL_LOOKUP #> [1] \"0\" #>  #> $DOTNET_NOLOGO #> [1] \"1\" #>  #> $DOTNET_SKIP_FIRST_TIME_EXPERIENCE #> [1] \"1\" #>  #> $EDGEWEBDRIVER #> [1] \"/usr/local/share/edge_driver\" #>  #> $EDITOR #> [1] \"vi\" #>  #> $GECKOWEBDRIVER #> [1] \"/usr/local/share/gecko_driver\" #>  #> $GHCUP_INSTALL_BASE_PREFIX #> [1] \"/usr/local\" #>  #> $GITHUB_ACTION #> [1] \"__run\" #>  #> $GITHUB_ACTIONS #> [1] \"true\" #>  #> $GITHUB_ACTION_REF #> [1] \"\" #>  #> $GITHUB_ACTION_REPOSITORY #> [1] \"\" #>  #> $GITHUB_ACTOR #> [1] \"briandconnelly\" #>  #> $GITHUB_ACTOR_ID #> [1] \"658158\" #>  #> $GITHUB_API_URL #> [1] \"https://api.github.com\" #>  #> $GITHUB_BASE_REF #> [1] \"\" #>  #> $GITHUB_ENV #> [1] \"/home/runner/work/_temp/_runner_file_commands/set_env_5fb34c8a-6ee4-430a-97d2-70b82d324a67\" #>  #> $GITHUB_EVENT_NAME #> [1] \"push\" #>  #> $GITHUB_EVENT_PATH #> [1] \"/home/runner/work/_temp/_github_workflow/event.json\" #>  #> $GITHUB_GRAPHQL_URL #> [1] \"https://api.github.com/graphql\" #>  #> $GITHUB_HEAD_REF #> [1] \"\" #>  #> $GITHUB_JOB #> [1] \"pkgdown\" #>  #> $GITHUB_OUTPUT #> [1] \"/home/runner/work/_temp/_runner_file_commands/set_output_5fb34c8a-6ee4-430a-97d2-70b82d324a67\" #>  #> $GITHUB_PAT #> [1] \"ghs_DHnKpFPRee4g2IFZyByvEbJRpfJDnI3dHF2I\" #>  #> $GITHUB_PATH #> [1] \"/home/runner/work/_temp/_runner_file_commands/add_path_5fb34c8a-6ee4-430a-97d2-70b82d324a67\" #>  #> $GITHUB_REF #> [1] \"refs/heads/main\" #>  #> $GITHUB_REF_NAME #> [1] \"main\" #>  #> $GITHUB_REF_PROTECTED #> [1] \"false\" #>  #> $GITHUB_REF_TYPE #> [1] \"branch\" #>  #> $GITHUB_REPOSITORY #> [1] \"briandconnelly/envvar\" #>  #> $GITHUB_REPOSITORY_ID #> [1] \"703281193\" #>  #> $GITHUB_REPOSITORY_OWNER #> [1] \"briandconnelly\" #>  #> $GITHUB_REPOSITORY_OWNER_ID #> [1] \"658158\" #>  #> $GITHUB_RETENTION_DAYS #> [1] \"90\" #>  #> $GITHUB_RUN_ATTEMPT #> [1] \"1\" #>  #> $GITHUB_RUN_ID #> [1] \"6525839987\" #>  #> $GITHUB_RUN_NUMBER #> [1] \"17\" #>  #> $GITHUB_SERVER_URL #> [1] \"https://github.com\" #>  #> $GITHUB_SHA #> [1] \"82944254ee15c08d3af4876c8e806bef6e27f3c6\" #>  #> $GITHUB_STATE #> [1] \"/home/runner/work/_temp/_runner_file_commands/save_state_5fb34c8a-6ee4-430a-97d2-70b82d324a67\" #>  #> $GITHUB_STEP_SUMMARY #> [1] \"/home/runner/work/_temp/_runner_file_commands/step_summary_5fb34c8a-6ee4-430a-97d2-70b82d324a67\" #>  #> $GITHUB_TRIGGERING_ACTOR #> [1] \"briandconnelly\" #>  #> $GITHUB_WORKFLOW #> [1] \"pkgdown\" #>  #> $GITHUB_WORKFLOW_REF #> [1] \"briandconnelly/envvar/.github/workflows/pkgdown.yaml@refs/heads/main\" #>  #> $GITHUB_WORKFLOW_SHA #> [1] \"82944254ee15c08d3af4876c8e806bef6e27f3c6\" #>  #> $GITHUB_WORKSPACE #> [1] \"/home/runner/work/envvar/envvar\" #>  #> $GOROOT_1_19_X64 #> [1] \"/opt/hostedtoolcache/go/1.19.13/x64\" #>  #> $GOROOT_1_20_X64 #> [1] \"/opt/hostedtoolcache/go/1.20.8/x64\" #>  #> $GOROOT_1_21_X64 #> [1] \"/opt/hostedtoolcache/go/1.21.1/x64\" #>  #> $GRADLE_HOME #> [1] \"/usr/share/gradle-8.3\" #>  #> $HOME #> [1] \"/home/runner\" #>  #> $HOMEBREW_CLEANUP_PERIODIC_FULL_DAYS #> [1] \"3650\" #>  #> $HOMEBREW_NO_AUTO_UPDATE #> [1] \"1\" #>  #> $INVOCATION_ID #> [1] \"284575648c144dddb83ad6fd4e4fa7eb\" #>  #> $IN_PKGDOWN #> [1] \"true\" #>  #> $ImageOS #> [1] \"ubuntu22\" #>  #> $ImageVersion #> [1] \"20231001.1.0\" #>  #> $JAVA_HOME #> [1] \"/usr/lib/jvm/temurin-11-jdk-amd64\" #>  #> $JAVA_HOME_11_X64 #> [1] \"/usr/lib/jvm/temurin-11-jdk-amd64\" #>  #> $JAVA_HOME_17_X64 #> [1] \"/usr/lib/jvm/temurin-17-jdk-amd64\" #>  #> $JAVA_HOME_8_X64 #> [1] \"/usr/lib/jvm/temurin-8-jdk-amd64\" #>  #> $JOURNAL_STREAM #> [1] \"8:17847\" #>  #> $LANG #> [1] \"C.UTF-8\" #>  #> $LANGUAGE #> [1] \"en\" #>  #> $LC_COLLATE #> [1] \"C\" #>  #> $LD_LIBRARY_PATH #> [1] \"/opt/R/4.3.1/lib/R/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/temurin-11-jdk-amd64/lib/server\" #>  #> $LEIN_HOME #> [1] \"/usr/local/lib/lein\" #>  #> $LEIN_JAR #> [1] \"/usr/local/lib/lein/self-installs/leiningen-2.10.0-standalone.jar\" #>  #> $LN_S #> [1] \"ln -s\" #>  #> $MAKE #> [1] \"make\" #>  #> $NOT_CRAN #> [1] \"true\" #>  #> $NVM_DIR #> [1] \"/home/runner/.nvm\" #>  #> $PAGER #> [1] \"/usr/bin/pager\" #>  #> $PATH #> [1] \"/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/snap/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" #>  #> $PERFLOG_LOCATION_SETTING #> [1] \"RUNNER_PERFLOG\" #>  #> $PIPX_BIN_DIR #> [1] \"/opt/pipx_bin\" #>  #> $PIPX_HOME #> [1] \"/opt/pipx\" #>  #> $PKGCACHE_HTTP_VERSION #> [1] \"2\" #>  #> $POWERSHELL_DISTRIBUTION_CHANNEL #> [1] \"GitHub-Actions-ubuntu22\" #>  #> $PWD #> [1] \"/home/runner/work/envvar/envvar\" #>  #> $RENV_CONFIG_REPOS_OVERRIDE #> [1] \"https://packagemanager.posit.co/cran/__linux__/jammy/latest\" #>  #> $RSPM #> [1] \"https://packagemanager.posit.co/cran/__linux__/jammy/latest\" #>  #> $RUNNER_ARCH #> [1] \"X64\" #>  #> $RUNNER_ENVIRONMENT #> [1] \"github-hosted\" #>  #> $RUNNER_NAME #> [1] \"GitHub Actions 8\" #>  #> $RUNNER_OS #> [1] \"Linux\" #>  #> $RUNNER_PERFLOG #> [1] \"/home/runner/perflog\" #>  #> $RUNNER_TEMP #> [1] \"/home/runner/work/_temp\" #>  #> $RUNNER_TOOL_CACHE #> [1] \"/opt/hostedtoolcache\" #>  #> $RUNNER_TRACKING_ID #> [1] \"github_c713d4c4-0ada-4693-aa47-c1e15bd36a10\" #>  #> $RUNNER_USER #> [1] \"runner\" #>  #> $RUNNER_WORKSPACE #> [1] \"/home/runner/work/envvar\" #>  #> $R_ARCH #> [1] \"\" #>  #> $R_BROWSER #> [1] \"xdg-open\" #>  #> $R_BZIPCMD #> [1] \"/usr/bin/bzip2\" #>  #> $R_DOC_DIR #> [1] \"/opt/R/4.3.1/lib/R/doc\" #>  #> $R_GZIPCMD #> [1] \"/usr/bin/gzip\" #>  #> $R_HOME #> [1] \"/opt/R/4.3.1/lib/R\" #>  #> $R_INCLUDE_DIR #> [1] \"/opt/R/4.3.1/lib/R/include\" #>  #> $R_LIBS_SITE #> [1] \"/opt/R/4.3.1/lib/R/site-library\" #>  #> $R_LIBS_USER #> [1] \"/home/runner/work/_temp/Library\" #>  #> $R_LIB_FOR_PAK #> [1] \"/opt/R/4.3.1/lib/R/site-library\" #>  #> $R_PAPERSIZE #> [1] \"letter\" #>  #> $R_PDFVIEWER #> [1] \"/usr/bin/xdg-open\" #>  #> $R_PLATFORM #> [1] \"x86_64-pc-linux-gnu\" #>  #> $R_PRINTCMD #> [1] \"/usr/bin/lpr\" #>  #> $R_RD4PDF #> [1] \"times,inconsolata,hyper\" #>  #> $R_SESSION_TMPDIR #> [1] \"/tmp/RtmpgB9Esp\" #>  #> $R_SHARE_DIR #> [1] \"/opt/R/4.3.1/lib/R/share\" #>  #> $R_STRIP_SHARED_LIB #> [1] \"strip --strip-unneeded\" #>  #> $R_STRIP_STATIC_LIB #> [1] \"strip --strip-debug\" #>  #> $R_SYSTEM_ABI #> [1] \"linux,gcc,gxx,gfortran,gfortran\" #>  #> $R_TEXI2DVICMD #> [1] \"/usr/bin/texi2dvi\" #>  #> $R_UNZIPCMD #> [1] \"/usr/bin/unzip\" #>  #> $R_ZIPCMD #> [1] \"/usr/bin/zip\" #>  #> $SED #> [1] \"/usr/bin/sed\" #>  #> $SELENIUM_JAR_PATH #> [1] \"/usr/share/java/selenium-server.jar\" #>  #> $SGX_AESM_ADDR #> [1] \"1\" #>  #> $SHLVL #> [1] \"0\" #>  #> $STATS_EXT #> [1] \"true\" #>  #> $STATS_EXTP #> [1] \"https://provjobdsettingscdn.blob.core.windows.net/settings/provjobdsettings-0.5.154/provjobd.data\" #>  #> $STATS_NM #> [1] \"true\" #>  #> $STATS_RDCL #> [1] \"true\" #>  #> $STATS_TIS #> [1] \"mining\" #>  #> $STATS_TRP #> [1] \"true\" #>  #> $STATS_UE #> [1] \"true\" #>  #> $STATS_V3PS #> [1] \"true\" #>  #> $STATS_VMD #> [1] \"true\" #>  #> $SWIFT_PATH #> [1] \"/usr/share/swift/usr/bin\" #>  #> $SYSTEMD_EXEC_PID #> [1] \"574\" #>  #> $TAR #> [1] \"/usr/bin/tar\" #>  #> $TZ #> [1] \"UTC\" #>  #> $USER #> [1] \"runner\" #>  #> $VCPKG_INSTALLATION_ROOT #> [1] \"/usr/local/share/vcpkg\" #>  #> $XDG_CONFIG_HOME #> [1] \"/home/runner/.config\" #>  #> $XDG_RUNTIME_DIR #> [1] \"/run/user/1001\" #>  #> $`_R_CHECK_SYSTEM_CLOCK_` #> [1] \"FALSE\" #>"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set, unset, and check environment variables — envvar_set","title":"Set, unset, and check environment variables — envvar_set","text":"envvar_set() sets one environment variables. envvar_unset() unsets environment variable.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set, unset, and check environment variables — envvar_set","text":"","code":"envvar_set(...)  envvar_unset(x)"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set, unset, and check environment variables — envvar_set","text":"... Named arguments containing environment variable value x String name environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set, unset, and check environment variables — envvar_set","text":"TODO TODO","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set, unset, and check environment variables — envvar_set","text":"","code":"envvar_set(DEBUG = 1) envvar_unset(\"DEBUG\")"},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables for files and directories — envvar_get_file","title":"Environment variables for files and directories — envvar_get_file","text":"envvar_get_file gets file name environment variable envvar_get_dir gets directory name environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables for files and directories — envvar_get_file","text":"","code":"envvar_get_file(   x,   create = TRUE,   check_readable = FALSE,   check_writable = FALSE,   transform = NULL,   ... )  envvar_get_dir(   x,   create = TRUE,   transform = NULL,   check_readable = FALSE,   check_writable = FALSE,   ... )"},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables for files and directories — envvar_get_file","text":"x String containing environment variable name create Create file directory exist (default: TRUE) check_readable Ensure file directory readable check_writable Ensure file directory writable transform Optional function applies transformation variable's value ... Additional arguments passed fs::file_create envvar_get_file() fs::dir_create envvar_get_dir()","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables for files and directories — envvar_get_file","text":"","code":"# Get a file path and make sure it exists if (FALSE) { envvar_set(\"MYDATA\" = \"/tmp/data.parquet\") envvar_get_file(\"MYDATA\") }  # Get a file path and make sure it exists if (FALSE) { envvar_set(\"MYDATADIR\" = \"/tmp/data/\") envvar_get_dir(\"MYDATADIR\") }"},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables containing lists — envvar_get_list","title":"Environment variables containing lists — envvar_get_list","text":"envvar_get_list()  gets lists environment variables. moment, unnamed lists supported. envvar_get_csv() envvar_get_psv() easy way use envvar_get_list() comma pipe separators.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables containing lists — envvar_get_list","text":"","code":"envvar_get_list(x, pattern = \":\", default = NULL, validate = NULL, ...)  envvar_get_csv(x, default = NA, validate = NULL)  envvar_get_psv(x, default = NA, validate = NULL)"},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables containing lists — envvar_get_list","text":"x String containing environment variable name pattern String specifying pattern used separate elements list. default Optional default value environment variable set validate Optional function checks value validity ... Additional arguments passed strsplit","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environment variables containing lists — envvar_get_list","text":"list","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables containing lists — envvar_get_list","text":"","code":"# Get the value of `$PATH`, creating a list with elements for each directory envvar_get_list(\"PATH\") #>  [1] \"/home/runner/.local/bin\"                  #>  [2] \"/opt/pipx_bin\"                            #>  [3] \"/home/runner/.cargo/bin\"                  #>  [4] \"/home/runner/.config/composer/vendor/bin\" #>  [5] \"/usr/local/.ghcup/bin\"                    #>  [6] \"/home/runner/.dotnet/tools\"               #>  [7] \"/snap/bin\"                                #>  [8] \"/usr/local/sbin\"                          #>  [9] \"/usr/local/bin\"                           #> [10] \"/usr/sbin\"                                #> [11] \"/usr/bin\"                                 #> [12] \"/sbin\"                                    #> [13] \"/bin\"                                     #> [14] \"/usr/games\"                               #> [15] \"/usr/local/games\"                         #> [16] \"/snap/bin\"                                 # Parse an list separated by `|` envvar_set(\"ROOMMATES\" = \"nandor|laszlo|nadja|guillermo|colin\") envvar_get_psv(\"ROOMMATES\") #> [1] \"nandor\"    \"laszlo\"    \"nadja\"     \"guillermo\" \"colin\""},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables for internet and network-related values — envvar_get_url","title":"Environment variables for internet and network-related values — envvar_get_url","text":"envvar_get_url gets URL value environment variable parses httr2::url_parse. envvar_get_ipaddress gets IP address value environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables for internet and network-related values — envvar_get_url","text":"","code":"envvar_get_url(x, default = NULL, validate = NULL)  envvar_get_ipaddress(x, default = NULL, validate = NULL)"},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables for internet and network-related values — envvar_get_url","text":"x String containing environment variable name default Optional default value environment variable set validate Optional function checks value validity","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables for internet and network-related values — envvar_get_url","text":"","code":"# Get a URL value and ensure that it is https envvar_set(\"TEST_URL\" = \"https://google.com:80/?a=1&b=2\") envvar_get_url(\"TEST_URL\", validate = \\(x) x$scheme == \"https\") #> <httr2_url> https://google.com:80/?a=1&b=2 #> • scheme: https #> • hostname: google.com #> • port: 80 #> • path: / #> • query: #>   • a: 1 #>   • b: 2  # Get an IP address value and ensure that it is IPv4 envvar_set(\"TEST_HOST\" = \"192.168.1.15\") envvar_get_ipaddress(\"TEST_HOST\", validate = ipaddress::is_ipv4) #> <ip_address[1]> #> [1] 192.168.1.15"},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of an environment variable as a particular type — envvar_get_integer","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"envvar_get_integer() reads environment variables integer values (e.g., 15, 0, -1) envvar_get_numeric() reads environment variables numeric values (e.g., 100.12, -31) envvar_get_logical() reads environment variables logical values (e.g., TRUE, 1, \"T\") envvar_get_version reads environment variables semantic version numbers (e.g., 4.3.1) envvar_get_date() reads environment variables date values (e.g., \"2023-01-02\") envvar_get_date() reads environment variables date-time values (e.g., \"2023-01-02 01:23:45 UTC\" 1697037804)","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"","code":"envvar_get_integer(x, default = NULL, validate = NULL)  envvar_get_numeric(x, default = NULL, validate = NULL)  envvar_get_logical(x, default = NULL, validate = NULL)  envvar_get_version(x, default = NULL, validate = NULL)  envvar_get_date(x, default = NULL, validate = NULL, ...)  envvar_get_datetime(x, default = NULL, validate = NULL, ...)"},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"x String containing environment variable name default Optional default value environment variable set validate Optional function checks value validity ... Additional arguments passed lubridate::as_date envvar_get_date() lubridate::as_datetime envvar_get_datetime()","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"","code":"# Get and use an integer value envvar_set(\"MYNUMBER\" = 12) envvar_get_integer(\"MYNUMBER\") + 5 #> [1] 17  # Get and use a numeric value envvar_set(\"MYNUMBER\" = 12.34) envvar_get_numeric(\"MYNUMBER\") + 5 #> [1] 17.34  # Check a logical value isTRUE(envvar_get_logical(\"RSTUDIO_CLI_HYPERLINKS\", default = FALSE)) #> ℹ Environment variable `RSTUDIO_CLI_HYPERLINKS` is not set. Using default value FALSE. #> [1] FALSE  # Get an IP address value and ensure that it is IPv4 envvar_set(\"MY_VER\" = \"4.3.1\") envvar_get_version(\"MY_VER\", validate = \\(x) x > as.numeric_version(\"4.3\")) #> [1] ‘4.3.1’ # Get a date and make sure it's in the future envvar_set(\"LAUNCH_DATE\" = \"2024-08-08\") envvar_get_date(\"LAUNCH_DATE\", validate = \\(x) x > Sys.Date()) #> [1] \"2024-08-08\""},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables for UUIDs — envvar_get_uuid","title":"Environment variables for UUIDs — envvar_get_uuid","text":"envvar_get_uuid gets UUID environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables for UUIDs — envvar_get_uuid","text":"","code":"envvar_get_uuid(x, default = NULL, validate = NULL)"},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables for UUIDs — envvar_get_uuid","text":"x String containing environment variable name default Optional default value environment variable set validate Optional function checks value validity","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables for UUIDs — envvar_get_uuid","text":"","code":"# Get a file path and make sure it exists envvar_set(\"DEMO_GUID\" = \"d647f20f-c44c-4914-8255-9eca97150d4c\") envvar_get_uuid(\"DEMO_GUID\") #> UUID: d647f20f-c44c-4914-8255-9eca97150d4c"}]
