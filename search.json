[{"path":"https://briandconnelly.github.io/envvar/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 envvar authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://briandconnelly.github.io/envvar/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Connelly. Author, maintainer, copyright holder.","code":""},{"path":"https://briandconnelly.github.io/envvar/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Connelly B (2023). envvar: Make working environment variables easier consistent. https://github.com/briandconnelly/envvar, https://briandconnelly.github.io/envvar/.","code":"@Manual{,   title = {envvar: Make working with environment variables easier and more consistent},   author = {Brian Connelly},   year = {2023},   note = {https://github.com/briandconnelly/envvar, https://briandconnelly.github.io/envvar/}, }"},{"path":"https://briandconnelly.github.io/envvar/index.html","id":"envvar","dir":"","previous_headings":"","what":"Make working with environment variables easier and more consistent","title":"Make working with environment variables easier and more consistent","text":"Environment variables common way alter code behaves depending context. ’re represented name-value pairs, value always string. , code uses environment variables must validate values make sure ’re reasonable transform usable type. envvar makes working environment variables easier consistent. enables transform validate values, making immediately usable code. Aside allowing define transformation validation functions, envvar comes set helper functions handle common data types integers, lists, URLs, IP addresses, . example, pretend ’re using environment variable called IMPORTANT_SERVER store URL important server. can use envvar’s envvar_get_url() function receive value convert [httr2] url object: Just safe, can set default value case someone forgot set value: can also add validation check ensure ’s using https:","code":"library(envvar)  envvar_set(\"IMPORTANT_SERVER\" = \"https://192.168.1.12\") library(envvar)  prod_server_url <- envvar_get_url(\"IMPORTANT_SERVER\") prod_server_url #> <httr2_url> https://192.168.1.12 #> • scheme: https #> • hostname: 192.168.1.12 envvar_unset(\"IMPORTANT_SERVER\")  prod_server_url <- envvar_get_url(\"IMPORTANT_SERVER\", default = \"https://my_important_server.biz\") #> ℹ Environment variable `IMPORTANT_SERVER` is not set. Using default value \"https://my_important_server.biz\". prod_server_url #> <httr2_url> https://my_important_server.biz #> • scheme: https #> • hostname: my_important_server.biz envvar_set(\"IMPORTANT_SERVER\" = \"https://192.168.1.12\")  prod_server_url <- envvar_get_url(   \"IMPORTANT_SERVER\",   default = \"https://my_important_server.biz\",   validate = \\(x) x$scheme == \"https\" ) prod_server_url #> <httr2_url> https://192.168.1.12 #> • scheme: https #> • hostname: 192.168.1.12"},{"path":"https://briandconnelly.github.io/envvar/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Make working with environment variables easier and more consistent","text":"’d like try development version envvar, can install directly GitHub:","code":"# install.packages(\"remotes\") remotes::install_github(\"briandconnelly/envvar\")"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar-package.html","id":null,"dir":"Reference","previous_headings":"","what":"envvar: Make working with environment variables easier and more consistent — envvar-package","title":"envvar: Make working with environment variables easier and more consistent — envvar-package","text":"envvar makes easy set, check, retrieve, transform, validate environment variables.","code":""},{"path":[]},{"path":"https://briandconnelly.github.io/envvar/reference/envvar-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"envvar: Make working with environment variables easier and more consistent — envvar-package","text":"Maintainer: Brian Connelly bdc@bconnelly.net (ORCID) [copyright holder]","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of an environment variable — envvar_get","title":"Get the value of an environment variable — envvar_get","text":"envvar_get() returns value environment variable. envvar_get_oneof() gets value environment variable ensures within defined set potential values.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of an environment variable — envvar_get","text":"","code":"envvar_get(   x,   default = NA_character_,   transform = NULL,   validate = NULL,   use_default = TRUE )  envvar_get_oneof(   x,   choices,   default = NA_character_,   transform = NULL,   validate = NULL,   use_default = TRUE )"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of an environment variable — envvar_get","text":"x String containing environment variable name default Optional default value environment variable set transform Optional function applies transformation variable's value validate Optional function checks value validity use_default Logical value indicating whether value specified default used (TRUE, default) error raised (FALSE) choices list containing potential values","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the value of an environment variable — envvar_get","text":"value given environment variable, set. string unless transform function changed object's type.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get the value of an environment variable — envvar_get","text":"envvar_get() type-specific variants follow workflow: value environment variable retrieved. variable set, value specified default used (error raised use_default FALSE). Optionally, value can transformed function specified transform argument. Transformation functions return scalar object. Optionally, value can validated function specified validate argument. Validation functions return logical value indicating whether value matches given criteria. error raised validation function return TRUE. transformed, validated value returned.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of an environment variable — envvar_get","text":"","code":"# Get the current user's home directory envvar_get(\"HOME\") #> [1] \"/home/runner\"  # Get the current user, making sure it is either 'root' or 'alice' if (FALSE) { envvar_get_oneof(\"USER\", choices = c(\"root\", \"alice\")) }"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether an environment variable is set — envvar_is_set","title":"Check whether an environment variable is set — envvar_is_set","text":"envvar_is_set() checks whether given environment variable set.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether an environment variable is set — envvar_is_set","text":"","code":"envvar_is_set(x)"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether an environment variable is set — envvar_is_set","text":"x String name environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether an environment variable is set — envvar_is_set","text":"logical value","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_is_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether an environment variable is set — envvar_is_set","text":"","code":"envvar_is_set(\"HOME\") #> [1] TRUE"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set, unset, and check environment variables — envvar_set","title":"Set, unset, and check environment variables — envvar_set","text":"envvar_set() sets one environment variables. envvar_unset() unsets environment variable.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set, unset, and check environment variables — envvar_set","text":"","code":"envvar_set(...)  envvar_unset(x)"},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set, unset, and check environment variables — envvar_set","text":"... Named arguments containing environment variable value x String name environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set, unset, and check environment variables — envvar_set","text":"TODO TODO","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/envvar_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set, unset, and check environment variables — envvar_set","text":"","code":"envvar_set(DEBUG = 1) envvar_unset(\"DEBUG\")"},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables for files and directories — envvar_get_file","title":"Environment variables for files and directories — envvar_get_file","text":"envvar_get_file gets file name environment variable envvar_get_dir gets directory name environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables for files and directories — envvar_get_file","text":"","code":"envvar_get_file(   x,   check_readable = FALSE,   check_writable = FALSE,   transform = NULL,   create = TRUE,   use_default = TRUE )  envvar_get_dir(   x,   transform = NULL,   create = TRUE,   check_readable = FALSE,   check_writable = FALSE,   use_default = TRUE )"},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables for files and directories — envvar_get_file","text":"x String containing environment variable name check_readable Ensure file directory readable check_writable Ensure file directory writable transform Optional function applies transformation variable's value create Create file directory exist (default: TRUE) use_default Logical value indicating whether value specified default used (TRUE, default) error raised (FALSE)","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables for files and directories — envvar_get_file","text":"","code":"# Get a file path and make sure it exists if (FALSE) { envvar_set(\"MYDATA\" = \"/tmp/data.parquet\") envvar_get_file(\"MYDATA\") }  # Get a file path and make sure it exists if (FALSE) { envvar_set(\"MYDATADIR\" = \"/tmp/data/\") envvar_get_dir(\"MYDATADIR\") }"},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables containing lists — envvar_get_list","title":"Environment variables containing lists — envvar_get_list","text":"envvar_get_list()  gets lists environment variables. moment, unnamed lists supported. envvar_get_csv() envvar_get_psv() easy way use envvar_get_list() comma pipe separators.","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables containing lists — envvar_get_list","text":"","code":"envvar_get_list(   x,   pattern = \":\",   default = NA,   validate = NULL,   use_default = TRUE,   ... )  envvar_get_csv(x, default = NA, validate = NULL, use_default = TRUE)  envvar_get_psv(x, default = NA, validate = NULL, use_default = TRUE)"},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables containing lists — envvar_get_list","text":"x String containing environment variable name pattern String specifying pattern used separate elements list. default Optional default value environment variable set validate Optional function checks value validity use_default Logical value indicating whether value specified default used (TRUE, default) error raised (FALSE) ... Additional arguments passed strsplit","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Environment variables containing lists — envvar_get_list","text":"list","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables containing lists — envvar_get_list","text":"","code":"# Get the value of `$PATH`, creating a list with elements for each directory envvar_get_list(\"PATH\") #>  [1] \"/home/runner/.local/bin\"                  #>  [2] \"/opt/pipx_bin\"                            #>  [3] \"/home/runner/.cargo/bin\"                  #>  [4] \"/home/runner/.config/composer/vendor/bin\" #>  [5] \"/usr/local/.ghcup/bin\"                    #>  [6] \"/home/runner/.dotnet/tools\"               #>  [7] \"/snap/bin\"                                #>  [8] \"/usr/local/sbin\"                          #>  [9] \"/usr/local/bin\"                           #> [10] \"/usr/sbin\"                                #> [11] \"/usr/bin\"                                 #> [12] \"/sbin\"                                    #> [13] \"/bin\"                                     #> [14] \"/usr/games\"                               #> [15] \"/usr/local/games\"                         #> [16] \"/snap/bin\"                                 # Parse an list separated by `|` envvar_set(\"ROOMMATES\" = \"nandor|laszlo|nadja|guillermo|colin\") envvar_get_psv(\"ROOMMATES\") #> [1] \"nandor\"    \"laszlo\"    \"nadja\"     \"guillermo\" \"colin\""},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables for internet and network-related values — envvar_get_url","title":"Environment variables for internet and network-related values — envvar_get_url","text":"envvar_get_url gets URL value environment variable parses httr2::url_parse. envvar_get_ipaddress gets IP address value environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables for internet and network-related values — envvar_get_url","text":"","code":"envvar_get_url(x, default = NA, validate = NULL, use_default = TRUE)  envvar_get_ipaddress(x, default = NA, validate = NULL, use_default = TRUE)"},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables for internet and network-related values — envvar_get_url","text":"x String containing environment variable name default Optional default value environment variable set validate Optional function checks value validity use_default Logical value indicating whether value specified default used (TRUE, default) error raised (FALSE)","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/network.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables for internet and network-related values — envvar_get_url","text":"","code":"# Get a URL value and ensure that it is https envvar_set(\"TEST_URL\" = \"https://google.com:80/?a=1&b=2\") envvar_get_url(\"TEST_URL\", validate = \\(x) x$scheme == \"https\") #> <httr2_url> https://google.com:80/?a=1&b=2 #> • scheme: https #> • hostname: google.com #> • port: 80 #> • path: / #> • query: #>   • a: 1 #>   • b: 2  # Get an IP address value and ensure that it is IPv4 envvar_set(\"TEST_HOST\" = \"192.168.1.15\") envvar_get_ipaddress(\"TEST_HOST\", validate = ipaddress::is_ipv4) #> <ip_address[1]> #> [1] 192.168.1.15"},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the value of an environment variable as a particular type — envvar_get_integer","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"envvar_get_integer() reads environment variables integer values (e.g., 15, 0, -1) envvar_get_numeric() reads environment variables numeric values (e.g., 100.12, -31) envvar_get_logical() reads environment variables logical values (e.g., TRUE, 1, \"T\") envvar_get_version reads environment variables semantic version numbers (e.g., 4.3.1) envvar_get_date() reads environment variables date values (e.g., \"2023-01-02\") envvar_get_date() reads environment variables date-time values (e.g., \"2023-01-02 01:23:45 UTC\" 1697037804)","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"","code":"envvar_get_integer(   x,   default = NA_integer_,   validate = NULL,   use_default = TRUE )  envvar_get_numeric(x, default = NA_real_, validate = NULL, use_default = TRUE)  envvar_get_logical(x, default = NA, validate = NULL, use_default = TRUE)  envvar_get_version(x, default = NA, validate = NULL, use_default = TRUE)  envvar_get_date(   x,   default = NA_character_,   validate = NULL,   use_default = TRUE,   ... )  envvar_get_datetime(   x,   default = NA_character_,   validate = NULL,   use_default = TRUE,   ... )"},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"x String containing environment variable name default Optional default value environment variable set validate Optional function checks value validity use_default Logical value indicating whether value specified default used (TRUE, default) error raised (FALSE) ... Additional arguments passed lubridate::as_date envvar_get_date() lubridate::as_datetime envvar_get_datetime()","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/types.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the value of an environment variable as a particular type — envvar_get_integer","text":"","code":"# Get and use an integer value envvar_set(\"MYNUMBER\" = 12) envvar_get_integer(\"MYNUMBER\") + 5 #> [1] 17  # Get and use a numeric value envvar_set(\"MYNUMBER\" = 12.34) envvar_get_numeric(\"MYNUMBER\") + 5 #> [1] 17.34  # Check a logical value isTRUE(envvar_get_logical(\"RSTUDIO_CLI_HYPERLINKS\")) #> ℹ Environment variable `RSTUDIO_CLI_HYPERLINKS` is not set. Using default value NA. #> [1] FALSE  # Get an IP address value and ensure that it is IPv4 envvar_set(\"MY_VER\" = \"4.3.1\") envvar_get_version(\"MY_VER\", validate = \\(x) x > as.numeric_version(\"4.3\")) #> [1] ‘4.3.1’"},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":null,"dir":"Reference","previous_headings":"","what":"Environment variables for UUIDs — envvar_get_uuid","title":"Environment variables for UUIDs — envvar_get_uuid","text":"envvar_get_uuid gets UUID environment variable","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Environment variables for UUIDs — envvar_get_uuid","text":"","code":"envvar_get_uuid(x, default = NA, validate = NULL, use_default = TRUE)"},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Environment variables for UUIDs — envvar_get_uuid","text":"x String containing environment variable name default Optional default value environment variable set validate Optional function checks value validity use_default Logical value indicating whether value specified default used (TRUE, default) error raised (FALSE)","code":""},{"path":"https://briandconnelly.github.io/envvar/reference/uuid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Environment variables for UUIDs — envvar_get_uuid","text":"","code":"# Get a file path and make sure it exists envvar_set(\"DEMO_GUID\" = \"d647f20f-c44c-4914-8255-9eca97150d4c\") envvar_get_uuid(\"DEMO_GUID\") #> UUID: d647f20f-c44c-4914-8255-9eca97150d4c"}]
